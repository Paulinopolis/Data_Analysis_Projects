{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #Division de la liste en elements \
def merge_sort(liste_flottants):\
    \
#Si la liste comporte un \'e9l\'e9ment, la function return cet \'e9l\'e9ment\
    if  len(liste_flottants) <= 1: \
        return liste_flottants\
\
#Diviser la liste en deux moiti\'e9s\
    median = len(liste_flottants)//2\
    liste_d = liste_flottants[:median]\
    liste_g = liste_flottants[median:]\
\
#Appliquer la fonction aux moiti\'e9s\
    gauche = merge_sort(liste_d)\
    droite = merge_sort(liste_g)\
#Reconstituer la liste avec des \'e9l\'e9ments s\'e9par\'e9s\
    fusionne = fusion(gauche,droite)\
    return fusionne\
\
#Tri des \'e9l\'e9ments\
def fusion(tableau1,tableau2):\
    indice_tableau1 = 0\
    indice_tableau2 = 0    \
    taille_tableau1 = len(tableau1)\
    taille_tableau2 = len(tableau2)\
    tableau_fusionne = []\
    while indice_tableau1<taille_tableau1 and indice_tableau2<taille_tableau2:\
        if tableau1[indice_tableau1] < tableau2[indice_tableau2]:\
            tableau_fusionne.append(tableau1[indice_tableau1])\
            indice_tableau1 += 1\
        else:\
            tableau_fusionne.append(tableau2[indice_tableau2])\
            indice_tableau2 += 1\
    while indice_tableau1<taille_tableau1:\
        tableau_fusionne.append(tableau1[indice_tableau1])\
        indice_tableau1+=1\
    while indice_tableau2<taille_tableau2:\
        tableau_fusionne.append(tableau2[indice_tableau2])\
        indice_tableau2+=1\
    return tableau_fusionne\
\
#Request the user to enter the numbers\
user_input = input ("Enter your numbers, separated by a comma (',')")\
\
#Check that the input is not blank\
if user_input == '': \
    print ("*You can't leave the space in blank*")\
    \
#Convert the input (string version) in a float list   \
lst = (user_input.split(','))\
lst_float= [float(x) for x in lst]\
print(lst_float)\
\
#Apply the functions to the float list\
lst_trie = merge_sort(lst_float)\
print(lst_trie)}